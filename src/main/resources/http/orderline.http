### A simple get request to the test endpoint. No need for login
GET {{url}}/auth/test/

### Populate the database with some data
POST {{url}}/orderlines/populate/

### Create a new user - this one will only get a USER role by default
POST {{url}}/auth/register/
Content-Type: application/json

{
  "username": "user",
  "password": "test123"
}

###
POST {{url}}/auth/login/
Content-Type: application/json

{
  "username": "user",
  "password": "test123"
}

> {%
    client.global.set("jwt_token", response.body.token);
    console.log("JWT Token:", client.global.get("jwt_token"));
%}

###
GET {{url}}/protected/user_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

###
GET {{url}}/protected/admin_demo/
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Add admin role to user
POST {{url}}/auth/user/addrole/
Accept: application/json
Authorization: Bearer {{jwt_token}}

{
    "role": "admin"
}

### Populate the database with order lines
POST {{url}}/orderlines/populate
Content-Type: application/json

### Create a new order line
POST {{url}}/orderlines
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "quantity": 2,
  "price": 15.99,
  "pizza": {
    "id": 1
  },
  "order": {
    "id": 1
  }
}

### Get all order lines
GET {{url}}/orderline
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Get a specific order line by ID
GET {{url}}/orderline/1
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Get all order lines for the current user
GET {{url}}/orderline/user
Accept: application/json
Authorization: Bearer {{jwt_token}}

### Update an order line by ID
PUT {{url}}/orderline/{id}
Content-Type: application/json
Authorization: Bearer {{jwt_token}}

{
  "quantity": 3,
  "price": 18.99,
  "pizza": {
    "id": 1
  },
  "order": {
    "id": 1
  }
}

### Delete an order line by ID
DELETE {{url}}/orderline/{id}
Authorization: Bearer {{jwt_token}}
```